#this can come from raw bids:
in_raw_T2w: '/srv/cbs/conp_project/MarmosetEverling/ProcessedData/T2w/t2_{subject}.nii.gz'

#for template building - mix of fmriprep and internally processed-data
in_images:
  T2w: 'results/preproc/sub-{subject}/sub-{subject}_desc-n4_T2w.nii.gz'

  #assumes that templateflow templates are linked in resources folder
init_template:
  T2w: 'results/preproc/sub-Birk/sub-Birk_desc-pad_T2w.nii.gz'

std_template:
  T2w: 'resources/MBM_v3/template_T2w_nosharp.nii.gz'


std_6tt_probseg: 'resources/MBM_v3/segmentation_six_types_prob_{labelnum}_{label}.nii.gz'
std_3tt_probseg: 'resources/MBM_v3/segmentation_three_types_prob_{labelnum}_{label}.nii.gz'
std_mask: 'resources/MBM_v3/mask_brain.nii.gz'

tissue_3tt:
  'gray': 1
  'white': 2
  'csf': 3

tissue_6tt:
  'corticalgray': 1
  'subcorticalgray': 2
  'white': 3
  'csf': 4
  'vessel': 5
  'other': 6

#for naming the final files in templateflow output
bids_suffix:
  T1w: 'desc-brain_T1w'
  T2w: 'desc-brain_T2w'
  GM: 'label-GM_probseg'
  WM: 'label-WM_probseg'



cohorts:
  - marm

participants_tsv:
  marm: 'config/participants_marm.tsv'


#for templateflow-style output
template_name: 'marm'  #tpl-{template_name} 



resolution_index: 1 # res-{resolution_index}
#shape, zooms, origin will be obtained from the nifti itself


#for creating the template_description.json file
template_description_extras:
  Name: 'Brief template description goes here'
  Authors:
    - 'Your Name Here'
  Acknowledgements: 'Created by ants_build_template_smk Snakemake workflow'
  BIDSVersion:
    - '1.1.0' 
  License: 'See LICENSE file'
  TemplateFlowVersion: '1.0.0'


#will register cohort templates to the std template after they are generated
std_template_name: 'MBMv3'

#keep this empty, is set by command-line ( --config run_iter=1 or --config run_cohort=young)
run_cohort: 
run_iter: 

#this is the iter which is exported into templateflow format
max_iters: 10


resample_init_template: False #set this True to resample init template to below dims 
# WARNING - changing this can significantly alter memory usage and run-time -- 
resample_init: '100x100x100%'

pad_init: '384x384x100'


#when updating template at each iteration 
resample_at_iter:
 '6': '384x384x200vox'

greedy_smoothing_schedule:
  - '3vox 2vox'
  - '3vox 2vox'
  - '3vox 2vox'
  - '3vox 2vox'
  - '3vox 2vox'
  - '3vox 2vox'
  - '3vox 2vox'
  - '3vox 2vox'
  - '2vox 1vox'
  - '2vox 1vox'
  - '2vox 1vox'

#greedy_smoothing: '1.732vox 0.707vox' #default
#greedy_smoothing: '3vox 2vox'


#should be at least 2.3.4 (includes --random-seed option, and fixes some argparsing bugs)
singularity:
  prepdwi: '/project/6050199/akhanf/singularity/bids-apps/khanlab_prepdwi_latest.sif'  
  ants:  '/project/6050199/akhanf/singularity/kaczmarj_ants_2.3.4.sif'
  itksnap:  '/project/6050199/akhanf/singularity/pyushkevich_itksnap_latest.sif'

ants:
  dim: 3
  shape_update:
      gradient_step: 0.25



